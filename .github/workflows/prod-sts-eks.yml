name: Build & Deploy to GCP

on:
  workflow_call:
    secrets:
      AWS_COM_BUILD_DEPLOY_KEY_ID:
        required: true
      AWS_COM_BUILD_DEPLOY_SECRET_ACCESS_KEY:
        required: true
    inputs:
      AWS_REGION:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      EKS_NAME:
        required: true
        type: string
      REPO:
        required: true
        type: string

jobs:

  build-push-ecr:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: checkout
      uses: actions/checkout@master

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_COM_BUILD_DEPLOY_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_COM_BUILD_DEPLOY_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.AWS_REGION }}

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"
        
    - name: Run mvn clean install
      run: mvn -s mvn-settings.xml clean install -DskipTests  


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Build and Push
      id: build-and-push
      uses: docker/build-push-action@v2
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
          ${{ inputs.ECR_REPOSITORY }}:beta-${{ github.sha }}
          ${{ inputs.ECR_REPOSITORY }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

  deploy-to-eks:
    name: Deploy to eks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build-push-ecr]
    steps:
    - name: checkout
      uses: actions/checkout@master 

    - name: Build and push CONTAINER_NAME
      id: kubectl
      uses: jarvan1/eks-kubectl-action@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_COM_BUILD_DEPLOY_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_COM_BUILD_DEPLOY_SECRET_ACCESS_KEY }}
        aws_region: ${{ inputs.AWS_REGION }}
        cluster_name: ${{ inputs.EKS_NAME }}
        manifests_file: ${{ github.workspace }}/manifests/manifests.yaml
        image: ${{ inputs.ECR_REPOSITORY }}:${{ github.sha }}
        args: --kubeconfig=/github/home/.kube/config apply -f /github/workspace/manifests/manifests.yaml -n app
